{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { getApiResources } from '@utils/network';\nimport { API_PLANETS } from '@constants/api';\nimport { withErrorApi } from '@hoc-helpers/withErrorApi';\nimport { data } from 'browserslist';\nimport { getPlanetsImg } from '@services/getPeopleData';\nimport PlanetImage from '@components/PlanetsPage/PlanetImage';\nimport PlanetInfo from '@components/PlanetsPage/PlanetInfo';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PlanetPage({\n  match,\n  setApiError\n}) {\n  _s();\n\n  const [planetInfo, setPlanetInfo] = useState(null);\n  const [planetName, setPlanetName] = useState(null);\n  const [planetImage, setPlanetImage] = useState(null);\n  useEffect(() => {\n    (async () => {\n      const id = match.params.id;\n      const res = await getApiResources(`${API_PLANETS}/${id}/`);\n\n      if (res) {\n        setPersonInfo([{\n          title: 'climate',\n          data: res.climate\n        }, {\n          title: 'Mass',\n          data: res.mass\n        }, {\n          title: 'Gender',\n          data: res.gender\n        }, {\n          title: 'Hair color',\n          data: res.hair_color\n        }, {\n          title: 'Eye color',\n          data: res.eye_color\n        }, {\n          title: 'Skin color',\n          data: res.skin_color\n        }, {\n          title: 'Birth year',\n          data: res.birth_year\n        }]);\n        setPersonName(res.name);\n        setPersonImage(getPeopleImg(id)); // res.films\n\n        setApiError(false);\n      } else {\n        setApiError(true);\n      }\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"PlanetPage\"\n  }, void 0, false);\n}\n\n_s(PlanetPage, \"1HE+roBfrJ+xmtHsIkXSLJXJ9GE=\");\n\n_c = PlanetPage;\nPlanetPage.propTypes = {//   people: PropTypes.array\n};\nexport default PlanetPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlanetPage\");","map":{"version":3,"sources":["D:/my/Projects/Star Wars Wiki App/star-wars-app/src/containers/PlanetPage/PlanetPage.jsx"],"names":["useState","useEffect","PropTypes","getApiResources","API_PLANETS","withErrorApi","data","getPlanetsImg","PlanetImage","PlanetInfo","Box","Grid","Paper","Typography","PlanetPage","match","setApiError","planetInfo","setPlanetInfo","planetName","setPlanetName","planetImage","setPlanetImage","id","params","res","setPersonInfo","title","climate","mass","gender","hair_color","eye_color","skin_color","birth_year","setPersonName","name","setPersonImage","getPeopleImg","propTypes"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,SAASC,IAAT,QAAqB,cAArB;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;;;AAGA,SAASC,UAAT,CAAoB;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAApB,EAA4C;AAAA;;AAC1C,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BlB,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACmB,UAAD,EAAaC,aAAb,IAA8BpB,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACqB,WAAD,EAAcC,cAAd,IAAgCtB,QAAQ,CAAC,IAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,KAAC,YAAY;AACX,YAAMsB,EAAE,GAAGR,KAAK,CAACS,MAAN,CAAaD,EAAxB;AACA,YAAME,GAAG,GAAG,MAAMtB,eAAe,CAAE,GAAEC,WAAY,IAAGmB,EAAG,GAAtB,CAAjC;;AAEA,UAAIE,GAAJ,EAAS;AACPC,QAAAA,aAAa,CAAC,CACZ;AAAEC,UAAAA,KAAK,EAAE,SAAT;AAAoBrB,UAAAA,IAAI,EAAEmB,GAAG,CAACG;AAA9B,SADY,EAEZ;AAAED,UAAAA,KAAK,EAAE,MAAT;AAAiBrB,UAAAA,IAAI,EAAEmB,GAAG,CAACI;AAA3B,SAFY,EAGZ;AAAEF,UAAAA,KAAK,EAAE,QAAT;AAAmBrB,UAAAA,IAAI,EAAEmB,GAAG,CAACK;AAA7B,SAHY,EAIZ;AAAEH,UAAAA,KAAK,EAAE,YAAT;AAAuBrB,UAAAA,IAAI,EAAEmB,GAAG,CAACM;AAAjC,SAJY,EAKZ;AAAEJ,UAAAA,KAAK,EAAE,WAAT;AAAsBrB,UAAAA,IAAI,EAAEmB,GAAG,CAACO;AAAhC,SALY,EAMZ;AAAEL,UAAAA,KAAK,EAAE,YAAT;AAAuBrB,UAAAA,IAAI,EAAEmB,GAAG,CAACQ;AAAjC,SANY,EAOZ;AAAEN,UAAAA,KAAK,EAAE,YAAT;AAAuBrB,UAAAA,IAAI,EAAEmB,GAAG,CAACS;AAAjC,SAPY,CAAD,CAAb;AAUAC,QAAAA,aAAa,CAACV,GAAG,CAACW,IAAL,CAAb;AACAC,QAAAA,cAAc,CAACC,YAAY,CAACf,EAAD,CAAb,CAAd,CAZO,CAaP;;AAEAP,QAAAA,WAAW,CAAC,KAAD,CAAX;AACD,OAhBD,MAgBO;AACLA,QAAAA,WAAW,CAAC,IAAD,CAAX;AACD;AACF,KAvBD;AAwBD,GAzBQ,EAyBN,EAzBM,CAAT;AA2BA,sBACE;AAAA;AAAA,mBADF;AAGD;;GAnCQF,U;;KAAAA,U;AAqCTA,UAAU,CAACyB,SAAX,GAAuB,CACvB;AADuB,CAAvB;AAIA,eAAezB,UAAf","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getApiResources } from '@utils/network';\r\nimport { API_PLANETS } from '@constants/api';\r\nimport { withErrorApi } from '@hoc-helpers/withErrorApi';\r\nimport { data } from 'browserslist';\r\nimport { getPlanetsImg } from '@services/getPeopleData';\r\nimport PlanetImage from '@components/PlanetsPage/PlanetImage';\r\nimport PlanetInfo from '@components/PlanetsPage/PlanetInfo';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nfunction PlanetPage({ match, setApiError }) {\r\n  const [planetInfo, setPlanetInfo] = useState(null);\r\n  const [planetName, setPlanetName] = useState(null);\r\n  const [planetImage, setPlanetImage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const id = match.params.id;\r\n      const res = await getApiResources(`${API_PLANETS}/${id}/`);\r\n\r\n      if (res) {\r\n        setPersonInfo([\r\n          { title: 'climate', data: res.climate },\r\n          { title: 'Mass', data: res.mass },\r\n          { title: 'Gender', data: res.gender },\r\n          { title: 'Hair color', data: res.hair_color },\r\n          { title: 'Eye color', data: res.eye_color },\r\n          { title: 'Skin color', data: res.skin_color },\r\n          { title: 'Birth year', data: res.birth_year },\r\n        ]);\r\n\r\n        setPersonName(res.name);\r\n        setPersonImage(getPeopleImg(id));\r\n        // res.films\r\n\r\n        setApiError(false);\r\n      } else {\r\n        setApiError(true);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <>PlanetPage</>\r\n  );\r\n}\r\n \r\nPlanetPage.propTypes = {\r\n//   people: PropTypes.array\r\n}\r\n \r\nexport default PlanetPage;"]},"metadata":{},"sourceType":"module"}