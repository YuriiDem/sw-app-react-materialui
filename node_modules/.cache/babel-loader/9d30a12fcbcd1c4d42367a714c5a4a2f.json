{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { getApiResources } from '@utils/network';\nimport { API_PERSON } from '@constants/api';\nimport { withErrorApi } from '@hoc-helpers/withErrorApi';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PersonPage({\n  match,\n  setApiError\n}) {\n  _s();\n\n  const [personInfo, setPersonInfo] = useState(null);\n  useEffect(() => {\n    (async () => {\n      const id = match.params.id;\n      const res = await getApiResources(`${API_PERSON}/${id}/`);\n      console.log(res);\n\n      if (res) {\n        setApiError(false);\n      } else {\n        setApiError(true);\n      }\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"PersonPage\"\n  }, void 0, false);\n}\n\n_s(PersonPage, \"ux2+YkSCeGwJINvkt8Q/151HzaU=\");\n\n_c = PersonPage;\nPersonPage.propTypes = {\n  setApiError: PropTypes.func,\n  match: PropTypes.object\n};\nexport default _c2 = withErrorApi(PersonPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PersonPage\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/my/Projects/Star Wars Wiki App/star-wars-app/src/containers/PersonPage/PersonPage.jsx"],"names":["useState","useEffect","PropTypes","getApiResources","API_PERSON","withErrorApi","PersonPage","match","setApiError","personInfo","setPersonInfo","id","params","res","console","log","propTypes","func","object"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,YAAT,QAA6B,2BAA7B;;;;AAEA,SAASC,UAAT,CAAoB;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAApB,EAA4C;AAAA;;AAC1C,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,IAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,KAAC,YAAY;AACX,YAAMU,EAAE,GAAGJ,KAAK,CAACK,MAAN,CAAaD,EAAxB;AACA,YAAME,GAAG,GAAG,MAAMV,eAAe,CAAE,GAAEC,UAAW,IAAGO,EAAG,GAArB,CAAjC;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AAEA,UAAIA,GAAJ,EAAS;AAGPL,QAAAA,WAAW,CAAC,KAAD,CAAX;AACD,OAJD,MAIO;AACLA,QAAAA,WAAW,CAAC,IAAD,CAAX;AACD;AACF,KAZD;AAaD,GAdQ,EAcN,EAdM,CAAT;AAiBA,sBACE;AAAA;AAAA,mBADF;AAGD;;GAvBQF,U;;KAAAA,U;AAyBTA,UAAU,CAACU,SAAX,GAAuB;AACrBR,EAAAA,WAAW,EAAEN,SAAS,CAACe,IADF;AAErBV,EAAAA,KAAK,EAAEL,SAAS,CAACgB;AAFI,CAAvB;AAKA,qBAAeb,YAAY,CAACC,UAAD,CAA3B","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getApiResources } from '@utils/network';\r\nimport { API_PERSON } from '@constants/api';\r\nimport { withErrorApi } from '@hoc-helpers/withErrorApi';\r\n\r\nfunction PersonPage({ match, setApiError }) {\r\n  const [personInfo, setPersonInfo] = useState(null);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const id = match.params.id;\r\n      const res = await getApiResources(`${API_PERSON}/${id}/`);\r\n      console.log(res)\r\n\r\n      if (res) {\r\n    \r\n\r\n        setApiError(false);\r\n      } else {\r\n        setApiError(true);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <>PersonPage</>\r\n  );\r\n}\r\n\r\nPersonPage.propTypes = {\r\n  setApiError: PropTypes.func,\r\n  match: PropTypes.object,\r\n}\r\n\r\nexport default withErrorApi(PersonPage);"]},"metadata":{},"sourceType":"module"}