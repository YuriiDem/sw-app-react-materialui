{"ast":null,"code":"var BrowserslistError = require('./error');\n\nfunction noop() {}\n\nmodule.exports = {\n  loadQueries: function loadQueries() {\n    throw new BrowserslistError('Sharable configs are not supported in client-side build of Browserslist');\n  },\n  getStat: function getStat(opts) {\n    return opts.stats;\n  },\n  loadConfig: function loadConfig(opts) {\n    if (opts.config) {\n      throw new BrowserslistError('Browserslist config are not supported in client-side build');\n    }\n  },\n  loadCountry: function loadCountry() {\n    throw new BrowserslistError('Country statistics are not supported ' + 'in client-side build of Browserslist');\n  },\n  loadFeature: function loadFeature() {\n    throw new BrowserslistError('Supports queries are not available in client-side build of Browserslist');\n  },\n  currentNode: function currentNode(resolve, context) {\n    return resolve(['maintained node versions'], context)[0];\n  },\n  parseConfig: noop,\n  readConfig: noop,\n  findConfig: noop,\n  clearCaches: noop,\n  oldDataWarning: noop\n};","map":{"version":3,"sources":["D:/my/Projects/Star Wars Wiki App/star-wars-app/node_modules/browserslist/browser.js"],"names":["BrowserslistError","require","noop","module","exports","loadQueries","getStat","opts","stats","loadConfig","config","loadCountry","loadFeature","currentNode","resolve","context","parseConfig","readConfig","findConfig","clearCaches","oldDataWarning"],"mappings":"AAAA,IAAIA,iBAAiB,GAAGC,OAAO,CAAC,SAAD,CAA/B;;AAEA,SAASC,IAAT,GAAiB,CAAG;;AAEpBC,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,WAAW,EAAE,SAASA,WAAT,GAAwB;AACnC,UAAM,IAAIL,iBAAJ,CACJ,yEADI,CAAN;AAED,GAJc;AAMfM,EAAAA,OAAO,EAAE,SAASA,OAAT,CAAkBC,IAAlB,EAAwB;AAC/B,WAAOA,IAAI,CAACC,KAAZ;AACD,GARc;AAUfC,EAAAA,UAAU,EAAE,SAASA,UAAT,CAAqBF,IAArB,EAA2B;AACrC,QAAIA,IAAI,CAACG,MAAT,EAAiB;AACf,YAAM,IAAIV,iBAAJ,CACJ,4DADI,CAAN;AAED;AACF,GAfc;AAiBfW,EAAAA,WAAW,EAAE,SAASA,WAAT,GAAwB;AACnC,UAAM,IAAIX,iBAAJ,CACJ,0CACA,sCAFI,CAAN;AAGD,GArBc;AAuBfY,EAAAA,WAAW,EAAE,SAASA,WAAT,GAAwB;AACnC,UAAM,IAAIZ,iBAAJ,CACJ,yEADI,CAAN;AAED,GA1Bc;AA4Bfa,EAAAA,WAAW,EAAE,SAASA,WAAT,CAAsBC,OAAtB,EAA+BC,OAA/B,EAAwC;AACnD,WAAOD,OAAO,CAAC,CAAC,0BAAD,CAAD,EAA+BC,OAA/B,CAAP,CAA+C,CAA/C,CAAP;AACD,GA9Bc;AAgCfC,EAAAA,WAAW,EAAEd,IAhCE;AAkCfe,EAAAA,UAAU,EAAEf,IAlCG;AAoCfgB,EAAAA,UAAU,EAAEhB,IApCG;AAsCfiB,EAAAA,WAAW,EAAEjB,IAtCE;AAwCfkB,EAAAA,cAAc,EAAElB;AAxCD,CAAjB","sourcesContent":["var BrowserslistError = require('./error')\n\nfunction noop () { }\n\nmodule.exports = {\n  loadQueries: function loadQueries () {\n    throw new BrowserslistError(\n      'Sharable configs are not supported in client-side build of Browserslist')\n  },\n\n  getStat: function getStat (opts) {\n    return opts.stats\n  },\n\n  loadConfig: function loadConfig (opts) {\n    if (opts.config) {\n      throw new BrowserslistError(\n        'Browserslist config are not supported in client-side build')\n    }\n  },\n\n  loadCountry: function loadCountry () {\n    throw new BrowserslistError(\n      'Country statistics are not supported ' +\n      'in client-side build of Browserslist')\n  },\n\n  loadFeature: function loadFeature () {\n    throw new BrowserslistError(\n      'Supports queries are not available in client-side build of Browserslist')\n  },\n\n  currentNode: function currentNode (resolve, context) {\n    return resolve(['maintained node versions'], context)[0]\n  },\n\n  parseConfig: noop,\n\n  readConfig: noop,\n\n  findConfig: noop,\n\n  clearCaches: noop,\n\n  oldDataWarning: noop\n}\n"]},"metadata":{},"sourceType":"script"}