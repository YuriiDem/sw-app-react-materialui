{"ast":null,"code":"var _jsxFileName = \"D:\\\\my\\\\Projects\\\\Star Wars Wiki App\\\\star-wars-app\\\\src\\\\containers\\\\SpeciesInfoPage\\\\SpeciesInfoPage.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { getApiResources } from '@utils/network';\nimport { API_SPECIES_INFO } from '@constants/api';\nimport { withErrorApi } from '@hoc-helpers/withErrorApi';\nimport { data } from 'browserslist';\nimport { getSpeciesImg } from '@services/getPeopleData';\nimport SpeciesImage from '@components/SpeciesPage/SpeciesImage';\nimport SpeciesInfo from '@components/SpeciesPage/SpeciesInfo';\nimport GoBackLink from '@components/GoBackLink';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  card: {\n    borderRadius: 18\n  }\n});\n\nfunction SpeciesInfoPage({\n  match,\n  setApiError\n}) {\n  _s();\n\n  const [speciesInfo, setSpeciesInfo] = useState(null);\n  const [speciesName, setSpeciesName] = useState(null);\n  const [speciesImage, setSpeciesImage] = useState(null);\n  useEffect(() => {\n    (async () => {\n      const id = match.params.id;\n      const res = await getApiResources(`${API_SPECIES_INFO}/${id}/`);\n\n      if (res) {\n        setSpeciesInfo([{\n          title: 'Classification',\n          data: res.classification\n        }, {\n          title: 'Designation',\n          data: res.designation\n        }, {\n          title: 'Average height',\n          data: res.average_height\n        }, {\n          title: 'Skin colors',\n          data: res.skin_colors\n        }, {\n          title: 'Hair Colors',\n          data: res.hair_colors\n        }, {\n          title: 'Eye colors',\n          data: res.eye_colors\n        }, {\n          title: 'Average lifespan',\n          data: res.average_lifespan\n        }, {\n          title: 'Language',\n          data: res.language\n        }]);\n        setSpeciesName(res.name);\n        setSpeciesImage(getSpeciesImg(id)); // res.films\n\n        setApiError(false);\n      } else {\n        setApiError(true);\n      }\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GoBackLink, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 5,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 2,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          component: \"div\",\n          display: \"flex\",\n          p: 1,\n          m: 1,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 5,\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                children: /*#__PURE__*/_jsxDEV(SpeciesImage, {\n                  speciesImage: speciesImage,\n                  speciesName: speciesName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h4\",\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: speciesName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 44\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 19\n                }, this), speciesInfo && /*#__PURE__*/_jsxDEV(SpeciesInfo, {\n                  speciesInfo: speciesInfo\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 35\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SpeciesInfoPage, \"9gOirymkd3srci7t04xlnSn+aZo=\");\n\n_c = SpeciesInfoPage;\nSpeciesInfoPage.propTypes = {\n  setApiError: PropTypes.func,\n  match: PropTypes.object\n};\nexport default _c2 = withErrorApi(SpeciesInfoPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SpeciesInfoPage\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/my/Projects/Star Wars Wiki App/star-wars-app/src/containers/SpeciesInfoPage/SpeciesInfoPage.jsx"],"names":["useState","useEffect","makeStyles","PropTypes","getApiResources","API_SPECIES_INFO","withErrorApi","data","getSpeciesImg","SpeciesImage","SpeciesInfo","GoBackLink","Box","Grid","Paper","Typography","useStyles","card","borderRadius","SpeciesInfoPage","match","setApiError","speciesInfo","setSpeciesInfo","speciesName","setSpeciesName","speciesImage","setSpeciesImage","id","params","res","title","classification","designation","average_height","skin_colors","hair_colors","eye_colors","average_lifespan","language","name","propTypes","func","object"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport { getApiResources } from '@utils/network';\r\nimport { API_SPECIES_INFO } from '@constants/api';\r\nimport { withErrorApi } from '@hoc-helpers/withErrorApi';\r\nimport { data } from 'browserslist';\r\nimport { getSpeciesImg } from '@services/getPeopleData';\r\nimport SpeciesImage from '@components/SpeciesPage/SpeciesImage';\r\nimport SpeciesInfo from '@components/SpeciesPage/SpeciesInfo';\r\nimport GoBackLink from '@components/GoBackLink';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n   borderRadius: 18,\r\n  }\r\n });\r\n\r\nfunction SpeciesInfoPage({ match, setApiError }) {\r\n  const [speciesInfo, setSpeciesInfo] = useState(null);\r\n  const [speciesName, setSpeciesName] = useState(null);\r\n  const [speciesImage, setSpeciesImage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const id = match.params.id;\r\n      const res = await getApiResources(`${API_SPECIES_INFO}/${id}/`);\r\n\r\n      if (res) {\r\n        setSpeciesInfo([\r\n          { title: 'Classification', data: res.classification },\r\n          { title: 'Designation', data: res.designation },\r\n          { title: 'Average height', data: res.average_height },\r\n          { title: 'Skin colors', data: res.skin_colors },\r\n          { title: 'Hair Colors', data: res.hair_colors },\r\n          { title: 'Eye colors', data: res.eye_colors },\r\n          { title: 'Average lifespan', data: res.average_lifespan },\r\n          { title: 'Language', data: res.language },\r\n        ]);\r\n\r\n        setSpeciesName(res.name);\r\n        setSpeciesImage(getSpeciesImg(id));\r\n        // res.films\r\n\r\n        setApiError(false);\r\n      } else {\r\n        setApiError(true);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    <GoBackLink />\r\n      <Box mt={5} >\r\n        <Paper elevation={2}>\r\n          <Box component=\"div\" display=\"flex\" p={1} m={1} >\r\n            <Grid container spacing={5} alignItems=\"center\">\r\n              <Grid item>\r\n                <Box >\r\n                  <SpeciesImage speciesImage={speciesImage} speciesName={speciesName} />\r\n                </Box>\r\n              </Grid>\r\n\r\n              <Grid item >\r\n                <Box >\r\n                  <Typography variant=\"h4\"><strong>{speciesName}</strong></Typography>\r\n                  {speciesInfo && <SpeciesInfo speciesInfo={speciesInfo} />}\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Paper>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nSpeciesInfoPage.propTypes = {\r\n  setApiError: PropTypes.func,\r\n  match: PropTypes.object,\r\n}\r\n\r\nexport default withErrorApi(SpeciesInfoPage);"]},"metadata":{},"sourceType":"module"}