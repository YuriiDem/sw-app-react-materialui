{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { getApiResources } from '@utils/network';\nimport { API_SPECIES_INFO } from '@constants/api';\nimport { withErrorApi } from '@hoc-helpers/withErrorApi';\nimport { data } from 'browserslist';\nimport { getSpeciesImg } from '@services/getPeopleData';\nimport SpeciesImage from '@components/SpeciesPage/SpeciesImage';\nimport SpeciesInfo from '@components/SpeciesPage/SpeciesInfo';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SpeciesInfoPage() {\n  _s();\n\n  const [speciesInformation, setSpeciesInformation] = useState(null);\n  const [speciesName, setSpeciesName] = useState(null);\n  const [speciesImage, setSpeciesImage] = useState(null);\n  useEffect(() => {\n    (async () => {\n      const id = match.params.id;\n      const res = await getApiResources(`${API_SPECIES_INFO}/${id}/`);\n\n      if (res) {\n        setSpeciesInformation([{\n          title: 'Classification',\n          data: res.classification\n        }, {\n          title: 'Designation',\n          data: res.designation\n        }, {\n          title: 'Average height',\n          data: res.average_height\n        }, {\n          title: 'Skin colors',\n          data: res.skin_colors\n        }, {\n          title: 'Hair Colors',\n          data: res.hair_colors\n        }, {\n          title: 'Eye colors',\n          data: res.eye_colors\n        }, {\n          title: 'Average lifespan',\n          data: res.average_lifespan\n        }, {\n          title: 'Language',\n          data: res.language\n        }]);\n        setSpeciesName(res.name);\n        setSpeciesImage(getPeopleImg(id)); // res.films\n\n        setApiError(false);\n      } else {\n        setApiError(true);\n      }\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"SpeciesInfoPage\"\n  }, void 0, false);\n}\n\n_s(SpeciesInfoPage, \"M0eXcxtsMP30RPhGub+RmT9P/Ww=\");\n\n_c = SpeciesInfoPage;\nSpeciesInfoPage.propTypes = {//   people: PropTypes.array\n};\nexport default SpeciesInfoPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SpeciesInfoPage\");","map":{"version":3,"sources":["D:/my/Projects/Star Wars Wiki App/star-wars-app/src/containers/SpeciesInfoPage/SpeciesInfoPage.jsx"],"names":["useState","useEffect","PropTypes","getApiResources","API_SPECIES_INFO","withErrorApi","data","getSpeciesImg","SpeciesImage","SpeciesInfo","Box","Grid","Paper","Typography","SpeciesInfoPage","speciesInformation","setSpeciesInformation","speciesName","setSpeciesName","speciesImage","setSpeciesImage","id","match","params","res","title","classification","designation","average_height","skin_colors","hair_colors","eye_colors","average_lifespan","language","name","getPeopleImg","setApiError","propTypes"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,SAASC,gBAAT,QAAiC,gBAAjC;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,SAASC,IAAT,QAAqB,cAArB;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,OAAOC,YAAP,MAAyB,sCAAzB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;;;AAKA,SAASC,eAAT,GAA2B;AAAA;;AACzB,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8ChB,QAAQ,CAAC,IAAD,CAA5D;AACA,QAAM,CAACiB,WAAD,EAAcC,cAAd,IAAgClB,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACmB,YAAD,EAAeC,eAAf,IAAkCpB,QAAQ,CAAC,IAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,KAAC,YAAY;AACX,YAAMoB,EAAE,GAAGC,KAAK,CAACC,MAAN,CAAaF,EAAxB;AACA,YAAMG,GAAG,GAAG,MAAMrB,eAAe,CAAE,GAAEC,gBAAiB,IAAGiB,EAAG,GAA3B,CAAjC;;AAEA,UAAIG,GAAJ,EAAS;AACPR,QAAAA,qBAAqB,CAAC,CACpB;AAAES,UAAAA,KAAK,EAAE,gBAAT;AAA2BnB,UAAAA,IAAI,EAAEkB,GAAG,CAACE;AAArC,SADoB,EAEpB;AAAED,UAAAA,KAAK,EAAE,aAAT;AAAwBnB,UAAAA,IAAI,EAAEkB,GAAG,CAACG;AAAlC,SAFoB,EAGpB;AAAEF,UAAAA,KAAK,EAAE,gBAAT;AAA2BnB,UAAAA,IAAI,EAAEkB,GAAG,CAACI;AAArC,SAHoB,EAIpB;AAAEH,UAAAA,KAAK,EAAE,aAAT;AAAwBnB,UAAAA,IAAI,EAAEkB,GAAG,CAACK;AAAlC,SAJoB,EAKpB;AAAEJ,UAAAA,KAAK,EAAE,aAAT;AAAwBnB,UAAAA,IAAI,EAAEkB,GAAG,CAACM;AAAlC,SALoB,EAMpB;AAAEL,UAAAA,KAAK,EAAE,YAAT;AAAuBnB,UAAAA,IAAI,EAAEkB,GAAG,CAACO;AAAjC,SANoB,EAOpB;AAAEN,UAAAA,KAAK,EAAE,kBAAT;AAA6BnB,UAAAA,IAAI,EAAEkB,GAAG,CAACQ;AAAvC,SAPoB,EAQpB;AAAEP,UAAAA,KAAK,EAAE,UAAT;AAAqBnB,UAAAA,IAAI,EAAEkB,GAAG,CAACS;AAA/B,SARoB,CAAD,CAArB;AAWAf,QAAAA,cAAc,CAACM,GAAG,CAACU,IAAL,CAAd;AACAd,QAAAA,eAAe,CAACe,YAAY,CAACd,EAAD,CAAb,CAAf,CAbO,CAcP;;AAEAe,QAAAA,WAAW,CAAC,KAAD,CAAX;AACD,OAjBD,MAiBO;AACLA,QAAAA,WAAW,CAAC,IAAD,CAAX;AACD;AACF,KAxBD;AAyBD,GA1BQ,EA0BN,EA1BM,CAAT;AA8BA,sBACE;AAAA;AAAA,mBADF;AAGD;;GAtCQtB,e;;KAAAA,e;AAwCTA,eAAe,CAACuB,SAAhB,GAA4B,CAC5B;AAD4B,CAA5B;AAIA,eAAevB,eAAf","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getApiResources } from '@utils/network';\r\nimport { API_SPECIES_INFO } from '@constants/api';\r\nimport { withErrorApi } from '@hoc-helpers/withErrorApi';\r\nimport { data } from 'browserslist';\r\nimport { getSpeciesImg } from '@services/getPeopleData';\r\nimport SpeciesImage from '@components/SpeciesPage/SpeciesImage';\r\nimport SpeciesInfo from '@components/SpeciesPage/SpeciesInfo';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\n\r\n\r\nfunction SpeciesInfoPage() {\r\n  const [speciesInformation, setSpeciesInformation] = useState(null);\r\n  const [speciesName, setSpeciesName] = useState(null);\r\n  const [speciesImage, setSpeciesImage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const id = match.params.id;\r\n      const res = await getApiResources(`${API_SPECIES_INFO}/${id}/`);\r\n\r\n      if (res) {\r\n        setSpeciesInformation([\r\n          { title: 'Classification', data: res.classification },\r\n          { title: 'Designation', data: res.designation },\r\n          { title: 'Average height', data: res.average_height },\r\n          { title: 'Skin colors', data: res.skin_colors },\r\n          { title: 'Hair Colors', data: res.hair_colors },\r\n          { title: 'Eye colors', data: res.eye_colors },\r\n          { title: 'Average lifespan', data: res.average_lifespan },\r\n          { title: 'Language', data: res.language },\r\n        ]);\r\n\r\n        setSpeciesName(res.name);\r\n        setSpeciesImage(getPeopleImg(id));\r\n        // res.films\r\n\r\n        setApiError(false);\r\n      } else {\r\n        setApiError(true);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n\r\n\r\n  return (\r\n    <>SpeciesInfoPage</>\r\n  );\r\n}\r\n \r\nSpeciesInfoPage.propTypes = {\r\n//   people: PropTypes.array\r\n}\r\n \r\nexport default SpeciesInfoPage;"]},"metadata":{},"sourceType":"module"}