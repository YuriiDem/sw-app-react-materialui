{"ast":null,"code":"var _jsxFileName = \"D:\\\\my\\\\Projects\\\\Star Wars Wiki App\\\\star-wars-app\\\\src\\\\components\\\\SearchBar\\\\SearchBar.jsx\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { alpha, makeStyles } from '@material-ui/core/styles';\nimport { useState, useEffect } from 'react';\nimport { getApiResources } from '@utils/network';\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputBase from '@material-ui/core/InputBase';\nimport { withErrorApi } from '@hoc-helpers/withErrorApi';\nimport SearchInfo from '@components/SearchInfo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  },\n  search: {\n    margin: theme.spacing(1),\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    margin: '10px',\n    marginBottom: '30px',\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto'\n    }\n  },\n  searchInfo: {\n    display: 'none',\n    top: '300px',\n    position: 'absolute',\n    zIndex: '100'\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit'\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch'\n      }\n    }\n  }\n}));\n\nfunction SearchBar({\n  url,\n  getId,\n  getImg,\n  link,\n  setApiError\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [display, setDisplay] = useState(false);\n  const [inputSearchValue, setInputSearchValue] = useState('');\n  const [data, setData] = useState([]);\n\n  const getResponse = async params => {\n    const res = await getApiResources(url + params);\n\n    if (res) {\n      const dataList = res.results.map(({\n        name,\n        url\n      }) => {\n        const id = getId(url);\n        const img = getImg(id);\n        return {\n          id,\n          name,\n          img\n        };\n      });\n      setData(dataList);\n      setApiError(false);\n    } else {\n      setApiError(true);\n    }\n  };\n\n  const handleInputChange = event => {\n    const value = event.target.value;\n    setInputSearchValue(value);\n    getResponse(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.search,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.searchIcon,\n        children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputBase, {\n        placeholder: \"Search\\u2026\",\n        classes: {\n          root: classes.inputRoot,\n          input: classes.inputInput\n        },\n        inputProps: {\n          'aria-label': 'search'\n        },\n        value: inputSearchValue,\n        onChange: handleInputChange,\n        onClick: () => setDisplay(!display)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), display && /*#__PURE__*/_jsxDEV(SearchInfo, {\n      className: classes.searchInfo,\n      data: data,\n      link: link\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SearchBar, \"Tdmt0VGzFnIxXgrjnnmJ179OWPM=\", false, function () {\n  return [useStyles];\n});\n\n_c = SearchBar;\nSearchBar.propTypes = {\n  setApiError: PropTypes.func\n};\nexport default _c2 = withErrorApi(SearchBar);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SearchBar\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/my/Projects/Star Wars Wiki App/star-wars-app/src/components/SearchBar/SearchBar.jsx"],"names":["PropTypes","alpha","makeStyles","useState","useEffect","getApiResources","SearchIcon","InputBase","withErrorApi","SearchInfo","useStyles","theme","root","margin","spacing","search","position","borderRadius","shape","backgroundColor","palette","common","white","marginLeft","marginBottom","width","breakpoints","up","searchInfo","display","top","zIndex","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","SearchBar","url","getId","getImg","link","setApiError","classes","setDisplay","inputSearchValue","setInputSearchValue","data","setData","getResponse","params","res","dataList","results","map","name","id","img","handleInputChange","event","value","target","input","propTypes","func"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport { useState, useEffect } from 'react';\r\nimport { getApiResources } from '@utils/network';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { withErrorApi } from '@hoc-helpers/withErrorApi';\r\nimport SearchInfo from '@components/SearchInfo';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    search: {\r\n        margin: theme.spacing(1),\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginLeft: 0,\r\n        margin: '10px',\r\n        marginBottom: '30px',\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(1),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchInfo: {\r\n        display: 'none',\r\n        top: '300px',\r\n        position: 'absolute',\r\n        zIndex: '100',\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '12ch',\r\n            '&:focus': {\r\n                width: '20ch',\r\n            },\r\n        },\r\n    },\r\n}));\r\n\r\n\r\nfunction SearchBar({ url, getId, getImg, link, setApiError }) {\r\n    const classes = useStyles();\r\n\r\n    const [display, setDisplay] = useState(false);\r\n    const [inputSearchValue, setInputSearchValue] = useState('');\r\n    const [data, setData] = useState([]);\r\n\r\n\r\n    const getResponse = async params => {\r\n        const res = await getApiResources(url + params);\r\n\r\n        if (res) {\r\n            const dataList = res.results.map(({ name, url }) => {\r\n                const id = getId(url);\r\n                const img = getImg(id);\r\n\r\n                return {\r\n                    id,\r\n                    name,\r\n                    img\r\n                }\r\n            });\r\n\r\n            setData(dataList);\r\n            setApiError(false);\r\n        } else {\r\n            setApiError(true);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const handleInputChange = (event) => {\r\n        const value = event.target.value\r\n\r\n        setInputSearchValue(value);\r\n        getResponse(value);\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className={classes.search}>\r\n                <div className={classes.searchIcon}>\r\n                    <SearchIcon />\r\n                </div>\r\n                <InputBase\r\n                    placeholder=\"Search…\"\r\n                    classes={{\r\n                        root: classes.inputRoot,\r\n                        input: classes.inputInput,\r\n                    }}\r\n                    inputProps={{ 'aria-label': 'search' }}\r\n\r\n                    value={inputSearchValue}\r\n                    onChange={handleInputChange}\r\n                    onClick={() => setDisplay(!display)}\r\n                />\r\n            </div>\r\n\r\n            {display && (\r\n                <SearchInfo className={classes.searchInfo} data={data} link={link} />\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nSearchBar.propTypes = {\r\n    setApiError: PropTypes.func\r\n}\r\n\r\nexport default withErrorApi(SearchBar);"]},"metadata":{},"sourceType":"module"}