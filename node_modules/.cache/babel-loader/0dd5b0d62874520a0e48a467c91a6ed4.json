{"ast":null,"code":"var _jsxFileName = \"D:\\\\my\\\\Projects\\\\Star Wars Wiki App\\\\star-wars-app\\\\src\\\\containers\\\\PersonPage\\\\PersonPage.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { getApiResources } from '@utils/network';\nimport { API_PERSON } from '@constants/api';\nimport { withErrorApi } from '@hoc-helpers/withErrorApi';\nimport { data } from 'browserslist';\nimport { getPeopleImg } from '@services/getPeopleData';\nimport PersonImage from '@components/PeoplePage/PersonImage';\nimport PersonInfo from '@components/PeoplePage/PersonInfo';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction PersonPage({\n  match,\n  setApiError\n}) {\n  _s();\n\n  const [personInfo, setPersonInfo] = useState(null);\n  const [personName, setPersonName] = useState(null);\n  const [personImage, setPersonImage] = useState(null);\n  useEffect(() => {\n    (async () => {\n      const id = match.params.id;\n      const res = await getApiResources(`${API_PERSON}/${id}/`);\n\n      if (res) {\n        setPersonInfo([{\n          title: 'Height',\n          data: res.height\n        }, {\n          title: 'Mass',\n          data: res.mass\n        }, {\n          title: 'Gender',\n          data: res.gender\n        }, {\n          title: 'Hair color',\n          data: res.hair_color\n        }, {\n          title: 'Eye color',\n          data: res.eye_color\n        }, {\n          title: 'Skin color',\n          data: res.skin_color\n        }, {\n          title: 'Birth year',\n          data: res.birth_year\n        }]);\n        setPersonName(res.name);\n        setPersonImage(getPeopleImg(id)); // res.films\n\n        setApiError(false);\n      } else {\n        setApiError(true);\n      }\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: personName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"div\",\n      display: \"flex\",\n      p: 1,\n      m: 1,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(PersonImage, {\n              personImage: personImage,\n              personName: personName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: true,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            variant: \"outlined\",\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              children: personInfo && /*#__PURE__*/_jsxDEV(PersonInfo, {\n                personInfo: personInfo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 30\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(PersonPage, \"hWfdET1/VU03wQ7r4m058AJ/OgA=\");\n\n_c = PersonPage;\nPersonPage.propTypes = {\n  setApiError: PropTypes.func,\n  match: PropTypes.object\n};\nexport default _c2 = withErrorApi(PersonPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PersonPage\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/my/Projects/Star Wars Wiki App/star-wars-app/src/containers/PersonPage/PersonPage.jsx"],"names":["useState","useEffect","PropTypes","getApiResources","API_PERSON","withErrorApi","data","getPeopleImg","PersonImage","PersonInfo","Box","Grid","Paper","Typography","PersonPage","match","setApiError","personInfo","setPersonInfo","personName","setPersonName","personImage","setPersonImage","id","params","res","title","height","mass","gender","hair_color","eye_color","skin_color","birth_year","name","propTypes","func","object"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getApiResources } from '@utils/network';\r\nimport { API_PERSON } from '@constants/api';\r\nimport { withErrorApi } from '@hoc-helpers/withErrorApi';\r\nimport { data } from 'browserslist';\r\nimport { getPeopleImg } from '@services/getPeopleData';\r\nimport PersonImage from '@components/PeoplePage/PersonImage';\r\nimport PersonInfo from '@components/PeoplePage/PersonInfo';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nfunction PersonPage({ match, setApiError }) {\r\n  const [personInfo, setPersonInfo] = useState(null);\r\n  const [personName, setPersonName] = useState(null);\r\n  const [personImage, setPersonImage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const id = match.params.id;\r\n      const res = await getApiResources(`${API_PERSON}/${id}/`);\r\n\r\n      if (res) {\r\n        setPersonInfo([\r\n          { title: 'Height', data: res.height },\r\n          { title: 'Mass', data: res.mass },\r\n          { title: 'Gender', data: res.gender },\r\n          { title: 'Hair color', data: res.hair_color },\r\n          { title: 'Eye color', data: res.eye_color },\r\n          { title: 'Skin color', data: res.skin_color },\r\n          { title: 'Birth year', data: res.birth_year },\r\n        ]);\r\n\r\n        setPersonName(res.name);\r\n        setPersonImage(getPeopleImg(id));\r\n        // res.films\r\n\r\n        setApiError(false);\r\n      } else {\r\n        setApiError(true);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h4\"><strong>{personName}</strong></Typography>\r\n\r\n      <Box component=\"div\" display=\"flex\" p={1} m={1} >\r\n      <Grid container spacing={1}>\r\n        <Grid item>\r\n          <Box >\r\n            <PersonImage personImage={personImage} personName={personName} />\r\n          </Box>\r\n        </Grid>\r\n\r\n        <Grid item xs>\r\n          <Paper variant=\"outlined\">\r\n            <Box >\r\n              {personInfo && <PersonInfo personInfo={personInfo} />}\r\n            </Box>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n      </Box>\r\n\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nPersonPage.propTypes = {\r\n  setApiError: PropTypes.func,\r\n  match: PropTypes.object,\r\n}\r\n\r\nexport default withErrorApi(PersonPage);"]},"metadata":{},"sourceType":"module"}