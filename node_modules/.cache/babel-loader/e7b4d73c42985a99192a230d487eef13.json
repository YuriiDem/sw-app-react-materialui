{"ast":null,"code":"var _jsxFileName = \"D:\\\\my\\\\Projects\\\\Star Wars Wiki App\\\\star-wars-app\\\\src\\\\containers\\\\PeoplePage\\\\PeoplePage.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { getApiResources } from '@utils/network'; // import styles from './PeoplePage.module.css';\n\nimport { API_PEOPLE } from '@constants/api';\nimport { getPeopleId, getPeopleImg } from '@services/getPeopleData';\nimport PeopleList from '@components/PeoplePage/PeopleList';\nimport { withErrorApi } from '@hoc-helpers/withErrorApi';\nimport { useQueryParams } from '@hooks/useQueryParams';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction PeoplePage({\n  setApiError\n}) {\n  _s();\n\n  const [people, setPeople] = useState(null); // & next page buttons\n\n  const [next, setNext] = useState();\n  const [prev, setPrev] = useState();\n  const query = useQueryParams();\n  const queryPage = query.get('page');\n  console.log(queryPage);\n\n  async function getResources(url) {\n    const res = await getApiResources(url);\n\n    if (res) {\n      const peopleList = res.results.map(({\n        name,\n        url\n      }) => {\n        const id = getPeopleId(url);\n        const img = getPeopleImg(id);\n        return {\n          id,\n          name,\n          img\n        };\n      });\n      setPeople(peopleList);\n      setApiError(false);\n    } else {\n      setApiError(true);\n    }\n  }\n\n  useEffect(() => {\n    getResources(API_PEOPLE + queryPage);\n  }, [queryPage]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Characters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), people && /*#__PURE__*/_jsxDEV(PeopleList, {\n      people: people\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(PeoplePage, \"D+8h6Gis6O7604yl/lGwU9kKT3s=\", false, function () {\n  return [useQueryParams];\n});\n\n_c = PeoplePage;\nPeoplePage.propTypes = {\n  setApiError: PropTypes.func\n};\nexport default _c2 = withErrorApi(PeoplePage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PeoplePage\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/my/Projects/Star Wars Wiki App/star-wars-app/src/containers/PeoplePage/PeoplePage.jsx"],"names":["useState","useEffect","PropTypes","getApiResources","API_PEOPLE","getPeopleId","getPeopleImg","PeopleList","withErrorApi","useQueryParams","PeoplePage","setApiError","people","setPeople","next","setNext","prev","setPrev","query","queryPage","get","console","log","getResources","url","res","peopleList","results","map","name","id","img","propTypes","func"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,eAAT,QAAgC,gBAAhC,C,CACA;;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,yBAA1C;AACA,OAAOC,UAAP,MAAuB,mCAAvB;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,SAASC,cAAT,QAA+B,uBAA/B;;;;AAGA,SAASC,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAAqC;AAAA;;AACnC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,IAAD,CAApC,CADmC,CAGnC;;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,EAAhC;AACA,QAAM,CAACgB,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,EAAhC;AAEA,QAAMkB,KAAK,GAAGT,cAAc,EAA5B;AAEA,QAAMU,SAAS,GAAGD,KAAK,CAACE,GAAN,CAAU,MAAV,CAAlB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;;AAGA,iBAAeI,YAAf,CAA4BC,GAA5B,EAAiC;AAC/B,UAAMC,GAAG,GAAG,MAAMtB,eAAe,CAACqB,GAAD,CAAjC;;AAEA,QAAIC,GAAJ,EAAS;AACP,YAAMC,UAAU,GAAGD,GAAG,CAACE,OAAJ,CAAYC,GAAZ,CAAgB,CAAC;AAAEC,QAAAA,IAAF;AAAQL,QAAAA;AAAR,OAAD,KAAmB;AACpD,cAAMM,EAAE,GAAGzB,WAAW,CAACmB,GAAD,CAAtB;AACA,cAAMO,GAAG,GAAGzB,YAAY,CAACwB,EAAD,CAAxB;AAEA,eAAO;AACLA,UAAAA,EADK;AAELD,UAAAA,IAFK;AAGLE,UAAAA;AAHK,SAAP;AAKD,OATkB,CAAnB;AAWAlB,MAAAA,SAAS,CAACa,UAAD,CAAT;AACAf,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD,KAdD,MAcO;AACLA,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD;AACF;;AAEDV,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,YAAY,CAACnB,UAAU,GAACe,SAAZ,CAAZ;AACD,GAFQ,EAEN,CAACA,SAAD,CAFM,CAAT;AAIA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGP,MAAM,iBACL,QAAC,UAAD;AAAY,MAAA,MAAM,EAAEA;AAApB;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBADF;AAQD;;GA/CQF,U;UAOOD,c;;;KAPPC,U;AAiDTA,UAAU,CAACsB,SAAX,GAAuB;AACrBrB,EAAAA,WAAW,EAAET,SAAS,CAAC+B;AADF,CAAvB;AAIA,qBAAezB,YAAY,CAACE,UAAD,CAA3B","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { getApiResources } from '@utils/network';\r\n// import styles from './PeoplePage.module.css';\r\nimport { API_PEOPLE } from '@constants/api';\r\nimport { getPeopleId, getPeopleImg } from '@services/getPeopleData';\r\nimport PeopleList from '@components/PeoplePage/PeopleList';\r\nimport { withErrorApi } from '@hoc-helpers/withErrorApi';\r\nimport { useQueryParams } from '@hooks/useQueryParams';\r\n\r\n\r\nfunction PeoplePage({ setApiError }) {\r\n  const [people, setPeople] = useState(null);\r\n\r\n  // & next page buttons\r\n  const [next, setNext] = useState();\r\n  const [prev, setPrev] = useState();\r\n\r\n  const query = useQueryParams();\r\n\r\n  const queryPage = query.get('page');\r\n  console.log(queryPage);  \r\n\r\n\r\n  async function getResources(url) {\r\n    const res = await getApiResources(url);\r\n\r\n    if (res) {\r\n      const peopleList = res.results.map(({ name, url }) => {\r\n        const id = getPeopleId(url);\r\n        const img = getPeopleImg(id);\r\n\r\n        return {\r\n          id,\r\n          name,\r\n          img\r\n        }\r\n      });\r\n\r\n      setPeople(peopleList);\r\n      setApiError(false);\r\n    } else {\r\n      setApiError(true);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getResources(API_PEOPLE+queryPage);\r\n  }, [queryPage]);\r\n\r\n  return (\r\n    <>\r\n      <h2>Characters</h2>\r\n      {people && (\r\n        <PeopleList people={people} />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nPeoplePage.propTypes = {\r\n  setApiError: PropTypes.func\r\n}\r\n\r\nexport default withErrorApi(PeoplePage);\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}